version: '3.8'

services:
  postgres_service:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: ECommerceDb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    networks:
      - e_commerce_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis_service:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - e_commerce_network

  rabbitmq_service:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - e_commerce_network
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  product_service:
    build:
      context: .
      dockerfile: service/product/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  authentication_service:
    build:
      context: .
      dockerfile: service/authentication/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  mail_service:
    build:
      context: .
      dockerfile: service/mail/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  cart_service:
    build:
      context: .
      dockerfile: service/cart/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  cart_item_service:
    build:
      context: .
      dockerfile: service/cart_item/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  category_service:
    build:
      context: .
      dockerfile: service/category/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  courier_service:
    build:
      context: .
      dockerfile: service/courier/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  discount_service:
    build:
      context: .
      dockerfile: service/discount/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  freight_rate_service:
    build:
      context: .
      dockerfile: service/freight_rate/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  momo_service:
    build:
      context: .
      dockerfile: service/momo/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  news_service:
    build:
      context: .
      dockerfile: service/news/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  oauth_service:
    build:
      context: .
      dockerfile: service/oauth/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  order_service:
    build:
      context: .
      dockerfile: service/order/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  order_detail_service:
    build:
      context: .
      dockerfile: service/order_detail/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  payment_service:
    build:
      context: .
      dockerfile: service/payment/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  product_discount_service:
    build:
      context: .
      dockerfile: service/product_discount/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  review_service:
    build:
      context: .
      dockerfile: service/review/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  user_service:
    build:
      context: .
      dockerfile: service/user/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  vnpay_service:
    build:
      context: .
      dockerfile: service/vnpay/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  voucher_service:
    build:
      context: .
      dockerfile: service/voucher/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: host=postgres_service port=5432 user=postgres password=12345 dbname=ECommerceDb sslmode=disable
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

volumes:
  postgres_data:


networks:
  e_commerce_network:
