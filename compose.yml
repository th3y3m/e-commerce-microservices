version: '3.8'

services:
  postgres_service:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    networks:
      - e_commerce_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis_service:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - e_commerce_network

  rabbitmq_service:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - e_commerce_network
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  product_service:
    build:
      context: .
      dockerfile: service/product/Dockerfile
    ports:
      - "8081:8081"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  api_gateway_service:
    build:
      context: .
      dockerfile: service/api_gateway/Dockerfile
    ports:
      - "9000:9000"
    depends_on:
      - product_service
      - authentication_service
      - mail_service
      - cart_service
      - cart_item_service
      - category_service
      - courier_service
      - discount_service
      - freight_rate_service
      - momo_service
      - news_service
      - oauth_service
      - order_service
      - order_detail_service
      - payment_service
      - product_discount_service
      - review_service
      - user_service
      - vnpay_service
      - voucher_service
    networks:
      - e_commerce_network

  authentication_service:
    build:
      context: .
      dockerfile: service/authentication/Dockerfile
    ports:
      - "8099:8099"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  mail_service:
    build:
      context: .
      dockerfile: service/mail/Dockerfile
    ports:
      - "8096:8096"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  cart_service:
    build:
      context: .
      dockerfile: service/cart/Dockerfile
    ports:
      - "8085:8085"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  cart_item_service:
    build:
      context: .
      dockerfile: service/cart_item/Dockerfile
    ports:
      - "8084:8084"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  category_service:
    build:
      context: .
      dockerfile: service/category/Dockerfile
    ports:
      - "8086:8086"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  courier_service:
    build:
      context: .
      dockerfile: service/courier/Dockerfile
    ports:
      - "8087:8087"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  discount_service:
    build:
      context: .
      dockerfile: service/discount/Dockerfile
    ports:
      - "8088:8088"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  freight_rate_service:
    build:
      context: .
      dockerfile: service/freight_rate/Dockerfile
    ports:
      - "8089:8089"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  momo_service:
    build:
      context: .
      dockerfile: service/momo/Dockerfile
    ports:
      - "8097:8097"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  news_service:
    build:
      context: .
      dockerfile: service/news/Dockerfile
    ports:
      - "8083:8083"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  oauth_service:
    build:
      context: .
      dockerfile: service/oauth/Dockerfile
    ports:
      - "8080:8080"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  order_service:
    build:
      context: .
      dockerfile: service/order/Dockerfile
    ports:
      - "8090:8090"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  order_detail_service:
    build:
      context: .
      dockerfile: service/order_detail/Dockerfile
    ports:
      - "8091:8091"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  payment_service:
    build:
      context: .
      dockerfile: service/payment/Dockerfile
    ports:
      - "8094:8094"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  product_discount_service:
    build:
      context: .
      dockerfile: service/product_discount/Dockerfile
    ports:
      - "8092:8092"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  review_service:
    build:
      context: .
      dockerfile: service/review/Dockerfile
    ports:
      - "8093:8093"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  user_service:
    build:
      context: .
      dockerfile: service/user/Dockerfile
    ports:
      - "8082:8082"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  vnpay_service:
    build:
      context: .
      dockerfile: service/vnpay/Dockerfile
    ports:
      - "8098:8098"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

  voucher_service:
    build:
      context: .
      dockerfile: service/voucher/Dockerfile
    ports:
      - "8095:8095"
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_URI: ${RABBITMQ_URI}
    depends_on:
      postgres_service:
        condition: service_healthy
      redis_service:
        condition: service_started
      rabbitmq_service:
        condition: service_healthy
    networks:
      - e_commerce_network

volumes:
  postgres_data:


networks:
  e_commerce_network:
